var http = require('http');

http
  .createServer(function(req, res) {
    // nextTick - гарантирует нам, что он будет выполнен до того как придут следующие запросы. Это замена setTimeout(f,0)
    process.nextTick(function() {
      // Таким образом обработчики ниже гарантированно сработают до того как придут какие-то новые данные
      req.on('readable', function() {
        // должен сработать на ближайших данных
      });
    });

    // Бывает ситуация, когда мы хотим сделать ф-ию асинхронной, но при этом не тормозить событийный цикл. Например, это
    // когда у нас есть большая вычислительная задача. SetImmediate - этот вызов планирует выполнение ф-ии так, чтобы
    // она с одной стороны сработала как можно скорее, а с другой стороны на следующей итерации цикла, после обработки
    // текущих событий.
    // var part = 0;
    // setImmediate(function run() {
    //   heavyCalc(part++);
    //   if (notFinished) setImmediate(run);
    // });
  })
  .listen(1337);
