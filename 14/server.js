// LibUV - событийный цикл Node.JS. Эта библиотека уже встроена в сервер Node.js Она знает как работать в windows, как
// работать с linux. Если нам надо прочитать файл, то node.js обращается к этой библиотеке.
// Короч, 1)LibUV отвечает за кроссплатформенные операции ввода/вывода - работа с файлами, сетью.
// 2)LibUV отвечает за поддежку основного событийного цикла node.js : когда мы запускаем какой-то скрипт, то он
// запускается в режиме цикла.  Этот цикл чередует выполнение js, который обеспечивается виртульной машиной v8.
// С ожиданием различных событий ввода-вывода, срабатыванием таймеров, за которые также отвечает биб LibUV.
// И этот цикл будет продолжаться до тех пор, пока возможно появление каких-то новых событий ввода-вывова или таймеров,
// которые нужно буит обработать.

var http = require('http');
var fs = require('fs');

var server = new http.Server();

server.on('request', function(req, res) {
  if (req.url == '/') {
    fs.readFile('index.html', function(err, info) {
      if (err) {
        console.error(err);
        res.statusCode = 500;
        res.end('Error on server!');
        return;
      }
      res.end(info);
    });
  }
});

// listen - это уже команда работы с сетевыми соединениями. Там глубоко внутри watcher который по цепи вверх может дать
// нам какое-то событие, например connection - и это в конечном счете все приводит к событию Listening - и на этой ноте
// выполнение js завершается. И LibUV проверяет - есть ли какие-то watcher'ы, которые могут сработать. То есть есть ли
// какие-то внутрениие обработчики. Если их нет, то завершается весь процесс nodejs, завершается весть событийный цикл.
// Но в данном случае один такой watcher - а именно обработчик на порту 3000 - был поставлен. Именно поэтому процесс
// node.js не завершиться, а временно заснет и будет спать до появления причины чтобы проснуться. Например, до появления
// новых события ввода - вывода. Рано или поздно событие произойдет - request что кто-то подсоединился к порту 3000.
// LibUV - это сердце node.js
server.listen(3000);
